apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /Users/shark/.asdf/installs/kompose/1.34.0/bin/kompose convert -f docker-compose.yaml -o k8s
    kompose.hpa.cpu: "80"
    kompose.hpa.memory: 512Mi
    kompose.hpa.replicas.max: "3"
    kompose.hpa.replicas.min: "1"
    kompose.service.healthcheck.liveness.http_get_path: /health
    kompose.service.type: clusterip
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: auth
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: auth
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: /Users/shark/.asdf/installs/kompose/1.34.0/bin/kompose convert -f docker-compose.yaml -o k8s
        kompose.hpa.cpu: "80"
        kompose.hpa.memory: 512Mi
        kompose.hpa.replicas.max: "3"
        kompose.hpa.replicas.min: "1"
        kompose.service.healthcheck.liveness.http_get_path: /health
        kompose.service.type: clusterip
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: auth
    spec:
      containers:
        - env:
            - name: AUTH_HOST
              value: postgres
          image: auth
          name: auth
          ports:
            - containerPort: 7777
              protocol: TCP
          volumeMounts:
            - mountPath: /config.json
              name: auth-cm0
              subPath: config.json
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: config.json
                path: config.json
            name: auth-cm0
          name: auth-cm0
