// Code generated by sqlc-connect (https://github.com/walterwanderley/sqlc-connect). DO NOT EDIT.

package user

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	"google.golang.org/protobuf/types/known/wrapperspb"

	pb "github.com/codeharik/Atlantic/database/api/user/v1"
)

func toCreateUserRow(in CreateUserRow) *pb.CreateUserRow {

	out := new(pb.CreateUserRow)
	out.Id = in.ID
	if in.CreatedAt.Valid {
		out.CreatedAt = timestamppb.New(in.CreatedAt.Time)
	}
	if in.UpdatedAt.Valid {
		out.UpdatedAt = timestamppb.New(in.UpdatedAt.Time)
	}
	return out
}

func toUpdateUserRow(in UpdateUserRow) *pb.UpdateUserRow {

	out := new(pb.UpdateUserRow)
	out.Id = in.ID
	if in.UpdatedAt.Valid {
		out.UpdatedAt = timestamppb.New(in.UpdatedAt.Time)
	}
	return out
}

func toUser(in User) *pb.User {

	out := new(pb.User)
	out.Id = in.ID
	out.Username = in.Username
	out.Email = in.Email
	out.PhoneNumber = in.PhoneNumber
	out.Gender = in.Gender
	out.IsAdmin = in.IsAdmin
	if in.DateOfBirth.Valid {
		out.DateOfBirth = timestamppb.New(in.DateOfBirth.Time)
	}
	if in.CreatedAt.Valid {
		out.CreatedAt = timestamppb.New(in.CreatedAt.Time)
	}
	if in.UpdatedAt.Valid {
		out.UpdatedAt = timestamppb.New(in.UpdatedAt.Time)
	}
	if in.Location.Valid {
		out.Location = wrapperspb.Int32(in.Location.Int32)
	}
	return out
}
