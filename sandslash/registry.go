// Code generated by sqlc-connect (https://github.com/walterwanderley/sqlc-connect). DO NOT EDIT.

package main

import (
	"net/http"

	"connectrpc.com/connect"
	"connectrpc.com/grpcreflect"
	"github.com/jackc/pgx/v5/pgxpool"

	product_v1connect "sandslash/api/product/v1/v1connect"
	seller_v1connect "sandslash/api/seller/v1/v1connect"
	user_v1connect "sandslash/api/user/v1/v1connect"
	product_app "sandslash/store/query/product"
	seller_app "sandslash/store/query/seller"
	user_app "sandslash/store/query/user"
)

func registerHandlers(mux *http.ServeMux, db *pgxpool.Pool, interceptors []connect.Interceptor) {
	productService := product_app.NewService(product_app.New(db))
	productPath, productHandler := product_v1connect.NewProductServiceHandler(productService,
		connect.WithInterceptors(
			interceptors...,
		),
	)
	mux.Handle(productPath, productHandler)
	sellerService := seller_app.NewService(seller_app.New(db))
	sellerPath, sellerHandler := seller_v1connect.NewSellerServiceHandler(sellerService,
		connect.WithInterceptors(
			interceptors...,
		),
	)
	mux.Handle(sellerPath, sellerHandler)
	userService := user_app.NewService(user_app.New(db))
	userPath, userHandler := user_v1connect.NewUserServiceHandler(userService,
		connect.WithInterceptors(
			interceptors...,
		),
	)
	mux.Handle(userPath, userHandler)

	reflector := grpcreflect.NewStaticReflector(
		product_v1connect.ProductServiceName,
		seller_v1connect.SellerServiceName,
		user_v1connect.UserServiceName,
	)
	mux.Handle(grpcreflect.NewHandlerV1(reflector))
	mux.Handle(grpcreflect.NewHandlerV1Alpha(reflector))
}
