// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file v1/auth.proto (package auth.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The request message for the EmailLogin method
 *
 * @generated from message auth.v1.EmailLoginRequest
 */
export class EmailLoginRequest extends Message<EmailLoginRequest> {
  /**
   * @generated from field: string email = 1;
   */
  email = "";

  /**
   * @generated from field: string password = 2;
   */
  password = "";

  constructor(data?: PartialMessage<EmailLoginRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "auth.v1.EmailLoginRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailLoginRequest {
    return new EmailLoginRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailLoginRequest {
    return new EmailLoginRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailLoginRequest {
    return new EmailLoginRequest().fromJsonString(jsonString, options);
  }

  static equals(a: EmailLoginRequest | PlainMessage<EmailLoginRequest> | undefined, b: EmailLoginRequest | PlainMessage<EmailLoginRequest> | undefined): boolean {
    return proto3.util.equals(EmailLoginRequest, a, b);
  }
}

/**
 * The response message for the EmailLogin method
 *
 * @generated from message auth.v1.EmailLoginResponse
 */
export class EmailLoginResponse extends Message<EmailLoginResponse> {
  /**
   * @generated from field: int32 id = 1;
   */
  id = 0;

  /**
   * @generated from field: string username = 2;
   */
  username = "";

  /**
   * @generated from field: string email = 3;
   */
  email = "";

  /**
   * @generated from field: string error_message = 4;
   */
  errorMessage = "";

  constructor(data?: PartialMessage<EmailLoginResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "auth.v1.EmailLoginResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "email", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "error_message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmailLoginResponse {
    return new EmailLoginResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmailLoginResponse {
    return new EmailLoginResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmailLoginResponse {
    return new EmailLoginResponse().fromJsonString(jsonString, options);
  }

  static equals(a: EmailLoginResponse | PlainMessage<EmailLoginResponse> | undefined, b: EmailLoginResponse | PlainMessage<EmailLoginResponse> | undefined): boolean {
    return proto3.util.equals(EmailLoginResponse, a, b);
  }
}

